#!/bin/sh
# a program that removes a list of pages from a pdf file
#
# v0.1
# v0.2 Options -h,-v and -o added

VERSION="0.2"

USAGE="USAGE: $(basename $0) [options] <pdf-file> <remove-list>

	-o <out.pdf>	Define output file. default: <pdffile>-striped.pdf
	-h		Show this help.

	example: pdfstrip my-pdf.pdf 3,4,5"

while getopts ":hvo:" opt
do
	case $opt in
		h)
			echo "$USAGE";
			exit 0
			;;
		v)
			echo "Version: $(basename $0) $VERSION";
			exit 0
			;;
		o)
			PDF_OUT=$OPTARG
			;;
		\?)
			# Unknown Option
			echo "ERROR: Unknown opt -$OPTARG"
			exit 1
			;;
		:)
			# Missing Argument
			echo "ERROR: Missing argument for opt: -$OPTARG"
			exit 1;
			;;
	esac
done
shift $((OPTIND-1))


if [ -z "$1" ];
then
	echo "ERROR: Missing first argument"
	echo "$USAGE"
	exit 1
fi

if [ ! -e "$1" ];
then
	echo "ERROR: File \"$1\" does not exist"
	exit 1
fi

if [ ! -r "$1" ];
then
	echo "ERROR: File \"$1\" does not have read permissions"
	exit 1
fi

if [ -z "$2" ];
then
	echo "ERROR: Missing second argument"
	echo "$USAGE"
	exit 1
fi

PDF=$1
LIST=$2
MIME=$(xdg-mime query filetype $PDF )

if [ "$MIME" != "application/pdf" ];
then
	echo "ERROR: $PDF is not a pdf file"
	exit 1
fi

if [ -n "$(echo "$LIST" | grep -vE "([0-9]+[,]{1}[0-9]+|[,]{1}[0-9]+|[0-9]+)+[^,]*$")" ];
then
	echo "ERROR: Expression \"$LIST\" not valid!"
	exit 1
fi

PDF_OUT="${PDF_OUT:-${PDF%.pdf}-striped.pdf}"

echo "$PDF_OUT"

PAGE_NUMBER=$(pdfinfo $PDF | sed -nE 's/Pages:[ ]+([0-9]+)/\1/p')

SEQ=$(seq -s, 1 $PAGE_NUMBER)

ORDER=$(echo "$SEQ" | awk -v remove=$LIST \
	'BEGIN{
		FS=",";
		split(remove,rarr,",");
	}
	{
		split($0,arr,",");
		for(i in arr){
			for(x in rarr){
				if(arr[i] == rarr[x]){
					delete arr[i]
				}
			}
		}
	}
	END{
		for(i in arr){
			if(arr[i]){
				endstr= endstr arr[i] ","
			}
		}
		print endstr
	}')
ORDER="${ORDER%,}"

pdfjam $PDF $ORDER -o $PDF_OUT
